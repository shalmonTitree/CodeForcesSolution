//Bruteforce : will give tle
//Optimal
#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int main() {
    int t;
    cin >> t;
    while (t--) {
        int n, m;
        cin >> n >> m;
        vector<int> v(n + 1); // Using 1-based indexing
        vector<int> ans;
        for (int i = 1; i <= n; i++) {
            cin >> v[i];
        }

        int currentMax = *max_element(v.begin() + 1, v.end());

        while (m--) {
            char ch;
            int l, r;
            cin >> ch >> l >> r;

            if (ch == '+') {
                if (l <= currentMax) {
                    if (r >= currentMax) {
                        currentMax++;
                    }
                }
            } else if (ch == '-') {
                if (l <= currentMax) {
                    if (r >= currentMax) {
                        currentMax--;
                    }
                }
            }
            ans.push_back(currentMax);
        }

        for(int i = 0; i < ans.size(); i++)
        {
          cout<<ans[i]<<" ";
        }
    }

    return 0;
}
